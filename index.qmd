---
title: "Proyecto"
author: "Bryan Ramirez y Raúl Avendaño"
format: 
  html:
    page-layout: custom
    theme: "Quartz"    
    margin-top: 40px
    margin-left: 40px
    margin-bottom: 15px        
    margin-right: 15px
server: shiny
---
```{r}
#| label: carga-paquetes
#| context: setup
#| warning: false
#| message: false

# Carga de paquetes
library(tidyverse)
library(DT)
library(sf)
library(rgdal)
library(raster)
library(terra)
library(leaflet)
library(leaflet.extras)
library(leafem)
library(viridisLite)
library(plotly)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(readr)
library(viridisLite)
library(shiny)
```

```{r}
#| label: carga-datos
#| context: data
#| warning: false
#| message: false

# Carga de datos de registros de presencia de Orquídeas
orquideas <-
  st_read(
    dsn = "orquideas.csv",
    options = c(
      "X_POSSIBLE_NAMES=decimalLongitude",
      "Y_POSSIBLE_NAMES=decimalLatitude"
    ),
    quiet = TRUE
  )

# Asignación del CRS WGS84 
st_crs(orquideas) <- 4326

# Cambios de tipos de datos
orquideas <-
	orquideas |>
	mutate(
		day = as.numeric(day),
		month = as.numeric(month),
		year = as.numeric(year)
	)

# Carga área
areac <-
  st_read(
    dsn = "areaconservacion.geojson",
    quiet = TRUE
  ) |>
  
st_transform(4326) # reproyección a WGS84

# Union 1

orquideas_union_area <- 
  st_join(
    x = orquideas,
    y = dplyr::select(areac, nombre_ac), 
    join = st_within
  )

# Union 2
orquideas_area <-
orquideas_union_area |>
  st_drop_geometry() |>
  group_by(nombre_ac) |>
  summarize(riqueza_especies_orquideas = n_distinct(species, na.rm = TRUE))
```

```{r}
#| label: panel-widgets-entrada
#| panel: sidebar
#| warning: false
#| message: false

# Lista ordenada de especies con un elemento adicional = "Todas"
lista_especies <- unique(orquideas_union_area$species)
lista_especies <- sort(lista_especies)
lista_especies <- c("Todas", lista_especies)

# Widget de lista de selección de especies
selectInput(
  inputId = "especie",      # identificador del widget
  label = "Especie",        # etiqueta de la lista
  choices = lista_especies, # lista de opciones para seleccionar de la lista
  selected = "Todas"        # opción seleccionada por defecto
)

# Lista ordenada de años
lista_anios <- unique(orquideas_union_area$year)
lista_anios <- sort(lista_anios)
lista_anios <- c("Todos", lista_anios)

# Widget de lista de selección de años
selectInput(
  inputId = "anio",      # identificador del widget
  label = "Año",         # etiqueta de la lista
  choices = lista_anios, # lista de opciones para seleccionar de la lista
  selected = "Todos"     # opción seleccionada por defecto
)

# Este bloque es solo para mostrar el funcionamiento de un slider Widget 

sliderInput(
   inputId = "anio_slider",
   label = 'Año', 
   min = min(orquideas_union_area$year, na.rm=TRUE), 
   max = max(orquideas_union_area$year, na.rm=TRUE), 
   value = (min(orquideas_union_area$year, na.rm=TRUE) + max(orquideas_union_area$year, na.rm=TRUE)) / 2
 )

# Lista ordenada de meses
lista_meses <- unique(orquideas_union_area$month)
lista_meses <- sort(lista_meses)
lista_meses <- c("Todos", lista_meses)

# Widget de lista de selección de meses
selectInput(
	inputId = "mes",
	label = "Mes",
	choices = lista_meses,
	selected = "Todos"
)
```

```{r}
#| label: panel-widgets-salida
#| panel: center
#| warning: false
#| message: false

h3("Distribución geoespacial")
HTML("<p>")

leafletOutput(
	outputId = "mapa"
)


h3("Registros de presencia")
HTML("<p>")

# Widget de tabla interactiva
dataTableOutput(
	outputId =  "tabla" 
)

h3("Registros de presencia por especie")
HTML("<p>")

plotlyOutput(
	outputId = "grafico"
)

```

```{r}
#| label: servidor
#| context: server
#| warning: false
#| message: false

# Función reactiva para filtrar los registros de presencia 

filtrar_orquideas_union_area <- reactive({
 orquideas_union_area_filtrados <- orquideas_union_area
 
  
# Se realiza el filtro, solamente si el usario ha seleccionado una opción diferente a "Todas" en la lista de selección de especies
  
  if (input$especie != "Todas") {
    filtrar_orquideas_union_area <-
    orquideas_union_area_filtrados |>
      filter(species == input$especie)
  }
  
  # Filtro de años (lista de selección)
  if (input$anio != "Todos") {
   orquideas_union_area_filtrados <-
  		 orquideas_union_areaa_filtrados |>
  		filter(year == input$anio)
  }

 filtrar_orquideas_area <- reactive({
   orquideas_area_filtrados <- orquideas_area
   
  return(orquideas_area_filtrados)
}) 
    
# Este bloque es solo para demostrar el funcionamiento de un slider Filtro de años (slider)
 orquideas_union_area_filtrados <-
 	orquideas_union_area_filtrados |>
  filter(year == input$anio_slider)
  
  # Filtro de meses
  if (input$mes != "Todos") {
  orquideas_union_area_filtrados <-
  		 orquideas_union_area_filtrados |>
  		filter(month == input$mes)
  }

  return(orquideas_union_area_filtrados)
}) 

# Tabla interactiva de registros de presencia
output$tabla <- renderDataTable({
  orquideas_union_area <- filtrar_orquideas_union_area()

  # Tabla interactiva
 orquideas_area |>
  arrange(desc(riqueza_especies_orquideas)) |>
  datatable(
    colnames = c("Área", "Riqueza de especies de Orquídeas"),
    options = list(
      pageLength = 5,
      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
    )
  )
})

# Factor de color basado en los valores únicos de especies
colores_especies <- colorFactor(
  palette = viridis(length(unique(orquideas_union_area$species))), 
  domain = orquideas_union_area$species
)

# Mapa interactivo de registros de presencia
output$mapa <- renderLeaflet({
  orquideas_union_area <- filtrar_orquideas_union_area()	
	
	leaflet() |>
		addTiles(group = "OSM") |>
		addCircleMarkers(
    data = orquideas_union_area,
    stroke = F,
    radius = 4,
    fillColor = ~colores_especies(orquideas_union_area$species),
    fillOpacity = 1.0,
    popup = paste(
      paste0("<strong>Especie: </strong>", orquideas_union_area$species),
      paste0("<strong>Localidad: </strong>", orquideas_union_area$locality),
      paste0("<strong>Fecha: </strong>", orquideas_union_area$eventDate),
      paste0("<strong>Fuente: </strong>", orquideas_union_area$institutionCode),
      paste0("<a href='", orquideas_union_area$occurrenceID, "'>Más información</a>"),
      sep = '<br/>'
    ),    
    group = "Orquídeas"
		) |>
  addLayersControl(
    baseGroups = c(
      "OSM"
    ),
    overlayGroups = c("Orquídeas")
  )		
})

output$grafico <- renderPlotly({
  orquideas_union_area <- filtrar_orquideas_union_area()
  
  # Cálculo de la cantidad de registros de presencia en areas
	cantidad_registros_areas <-
	  orquideas_union_area |>
	  st_drop_geometry() |>
	  group_by(nombre_ac) |>
	  summarize(cantidad_registros = n()) |> 
		drop_na(nombre_ac) 
  
grafico <-
  cantidad_registros_areas |>
  ggplot(
	    aes(
	      x = reorder(nombre_ac, -cantidad_registros), 
	      y = cantidad_registros
	    )
	  ) +
	  geom_col(
	    aes(
	      text = paste0(
	        "Área", ": ", nombre_ac, "\n",
	        "Cantidad de registros: ", cantidad_registros
	      )
	    )    
	  ) +
	xlab("Área") +
	ylab("Cantidad de registros de presencia") +  
  theme_minimal()
  
ggplotly(grafico, tooltip = "text") |>
  config(locale = "es")
})

```
